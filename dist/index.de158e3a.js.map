{"mappings":"AAAA,mBAAe;AACX,qFAAyD;AACrC,qHAA6C;AACrB,8EAAF;AAEd,IAA5B,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC,EAAE,wCAAkB;AACzC,IAAlB,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAE7C,IAAI,CAAC,GAAG,CAAC,AAAC;AACV,IAAI,QAAQ,GAAG,EAAE;AACjB,IAAI,IAAI,GAAG,CAAC,iqCA0CZ,CAAC,AAAC;AAEF,IAAI,IAAI,GAAG,IAAM;IACb,UAAU,CAAC,IAAM;QACb,yCAAe;QACW,IAAtB,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAChB,QAAQ,IAAI,MAAM;aACf,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EACrB,QAAQ,IAAI,QAAQ;aAEpB,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;QAEvB,IAAI,CAAC,SAAS,GAAG,QAAQ;QACzB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QACtC,mBAAS,CACT,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,KAAK,CAAC;QACtB,CAAC,IAAI,CAAC;QACN,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EACf,IAAI,EAAE;KAEb,EAAE,EAAE,CAAC;CACT;AAED,IAAI,EAAE","sources":["src/main.js"],"sourcesContent":["//substring取0→n\r\n//word = word.replace(/\\n/g,'<br>')          //正则表达式，将所有\\n都转换\r\n//用setinterval取代settimeout，持续执行.但是老手用递归的settimeout,但是老手用递归的settimeout\r\n//#div1::after{}    css创建伪元素，相当于<span>,只可创建一层。\r\n\r\nlet html = document.querySelector('#html');  //qS通过css选择器找到这个元素\r\nlet style = document.querySelector('#style');\r\n\r\nlet n = 0;\r\nlet word_add = ''\r\nlet word = `\r\n/* 你好，我叫罗贤康，\r\n* 这里展现一下我的前端功底\r\n* 现在创建一个div。\r\n**/\r\n\r\n#div1{\r\n    width:200px;\r\n    height:200px; \r\n}\r\n\r\n/* 道生一，一生二\r\n**/\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    background:linear-gradient(90deg, rgba(255,255,255,1) 0%, \r\n    rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n\r\n/* 抱阴负阳，阴阳相生\r\n**/\r\n#div1::before{\r\n            width:100px;\r\n            height:100px;\r\n            top:0;\r\n            left:50%;\r\n            transform: translateX(-50%);\r\n            border-radius: 50%;\r\n            background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, \r\n            rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n        }\r\n#div1::after{ \r\n            width:100px;\r\n            height:100px;\r\n            bottom:0;\r\n            left:50%;\r\n            transform: translateX(-50%);\r\n            border-radius: 50%;\r\n            background: black;\r\n            background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n        }\r\n`;\r\n\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        //是回车不照搬，不是回车照搬\r\n        if (word[n] === '\\n') {\r\n            word_add += '<br>'\r\n        } else if (word[n] === '') {\r\n            word_add += '&nbsp;'\r\n        } else {\r\n            word_add += word[n]\r\n        }\r\n        html.innerHTML = word_add\r\n        style.innerHTML = word.substring(0, n)\r\n        /*滚动到底部*/\r\n        window.scrollTo(0,99999)\r\n        html.scrollTo(0,99999)\r\n        n += 1\r\n        if (n < word.length) {\r\n            step()\r\n        }\r\n    }, 10)\r\n}\r\n\r\nstep()\r\n\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}